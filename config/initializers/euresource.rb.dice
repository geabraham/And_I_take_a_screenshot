# Further documentation can be found here: https://columbo.imedidata.com/docs/eurekaclient/current/design/file.Configuration.html
<% eureka_uri             = configured[:production].eureka_url || 'http://localhost:9292' %>
<% stage                  = configured[:production].eureka_stage || :development %>
<% deployment_base_uri    = configured[:production].eureka_deployment_baseuri || 'http://localhost:3000' %>
<% mauth_base_uri         = configured[:production].mauth_url || 'http://localhost:7000' %>
<% mauth_app_uuid         = configured[:production].app_uuid || 'f8b97914-82d0-4d7f-bc21-34950ab8a2e2' %>
<% mauth_private_key_file = 'config/mauth_key' %>
<% entitystore            = configured[:production].entitystore || 'file:cache/rack/body' %>
<% metastore              = configured[:production].metastore || 'file:cache/rack/meta' %>

require 'euresource'
require 'eureka_tools'

Euresource.configure do
  config.stage_defaults do |defaults|
    defaults.mauth('<%= mauth_base_uri %>') do |mauth_config|
      mauth_config.app_uuid '<%= mauth_app_uuid %>'
      mauth_config.private_key_file '<%= mauth_private_key_file %>'

      # Only set if you want different logger for MAuth
      #mauth_config.logger MauthLogger.new
    end
    defaults.use MAuth::Faraday::RequestSigner, defaults.mauth_config

    # Turns on develop mode for local development, which adds extra logging and forces API deployments to Eureka
    # without having to delete prior versions of an API document for local development while making changes to an
    # API document.
    defaults.develop_mode (Rails.env != 'production')

    # Rails logger will be used for all logging if this is not set in Rails.
    #defaults.logger EuresourceLogger.new

    #Un-comment this option if you want to skip authenticating eureka responses
    #defaults.mauth_authenticate_responses false

<% if entitystore && metastore %>
    cache_config = {
      entitystore: '<%= entitystore %>',
      metastore: '<%= metastore %>',
      ignore_headers: %w(X-Content-Digest X-Rack-Cache),
      verbose: true
    }
    defaults.use FaradayMiddleware::RackCompatible, Rack::Cache::Context, cache_config
<% end %>
    defaults.use FaradayMiddleware::RackCompatible, CacheComplainer::Complainer
  end

  # This applies all default from above to configure a Eureka::Client instance for a specific eureka stage
  config.stage('<%= eureka_uri %>', :<%= stage %>) do |builder|
    builder.deployment_base_uri '<%= deployment_base_uri %>'

    # Specifies base URL for correct MAuth and uses default configuration above otherwise
    #builder.mauth('http://mauth-sandbox.example.com')
  end

  # Load and parse all api_documents for mocked resources.
  mocked_api_documents = Dir["#{Rails.root}/apis_for_remote_resources/*.yml"].map{ |f| YAML.load_file(f) }
  # TODO: remove mocking in production
  # unless Rails.env.production?
  mocked_resources = %w(patient_enrollments)
  #end
  fake_middleware_classes = mocked_resources.map do |resource_name|
    EurekaTools::ResourceMockerManager.class_for_mocked_resource(resource_name, mocked_api_documents)
  end

  # Configures a second Eureka::Client instance that mock requests to external resource dependencies
  # and stubs out requests to Eureka.
  config.stage('http://eureka-example.com', :remote) do |builder|
    builder.mock_api_deployments mocked_api_documents
    builder.resources mocked_resources

    # specify middlewares
    fake_middleware_classes.each{ |fmc| builder.use fmc }
    builder.faraday_adapter :rack, Rails.application
  end
end
