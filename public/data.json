{
  "mixins": [
    {
      "mixin": "clearfix",
      "code": "@include clearfix();",
      "description": "<p>This provides the same functionality as adding the .clearfix class to an html element. This is to be used in place of adding any clearing divs for floated elements, or any additional css hacks to achieve the same clearing effects.</p><p> In the example below, the outerbox(red border) has 2 floated boxes(green borders) within it. without the clearfix() mixin, the outer box would collapse to have no height at all.</p><p>The clearfix mixin is based on this <a href='http://nicolasgallagher.com/micro-clearfix-hack/'>css hack</a></p>",
      "example": "sandman/mixins/clearfix"
    },
    {
      "mixin": "text-overflow",
      "code": "@include text-overflow();",
      "description": "Makes text use ellipsis for overflow when dimensions are set. Below is a paragraph with the width set to 300px.The text-ovverflow mixin sets the textoverfow, overflow, and whitespace css properties. A block or inline-block element and a set width property is required. When using text-overflow, it is helpful to also provide a title attribute so the browser tooltips show the complete contents on element hover.",
      "example": "sandman/mixins/text_overflow"
    },
    {
      "mixin": "center-block",
      "code": "@include center-block();",
      "description": "Horizontally centers a block via css bu setting the display property to block and the left and right margins to auto. Setting a width on the element is required to center it.",
      "example": "sandman/mixins/center_block"
    },
    {
      "mixin": "size",
      "code": "@include size($width, $height);",
      "description": "Sets the width and height css properties. This is merely a shortcut/convenience mixin.",
      "example": "sandman/mixins/size"
    },
    {
      "mixin": "square",
      "code": "@include square($size)",
      "description": "Sets width and height the same.",
      "example": "sandman/mixins/square"
    },
    {
      "mixin": "border-radius",
      "code": "@include border-radius($radius);<br />@include border-top-radius($radius);<br />@include border-bottom-radius($radius);<br />@include border-right-radius($radius);<br />@include border-left-radius($radius);",
      "description": "The border radius mixins provide easy ways to add rounded corners. There are five distinct mixins that cover the most common rounded corner situations - all round, or a single side round - top, right, bottom, or left.",
      "example": "sandman/mixins/border_radius"
    },
    {
      "mixin": "rotate",
      "code": "@include rotate($degrees);",
      "description": "Cross browser css roation <span class='text-danger'>(DOWN TO IE9 ONLY FOR NOW)</span>. Degrees should be specified in the following formats: <b>90deg</b> or <b>-90deg</b>",
      "example": "sandman/mixins/rotate"
    },
    {
      "mixin": "opacity",
      "code": "@include opacity($opacity)",
      "description": "Cross browser css opacity - down to ie8. Opacity values are specified in a decimal format: <b>0.7</b>",
      "example": "sandman/mixins/opacity"
    }
  ],
  "helpers": [
    {
      "helper": "Button",
      "code": "button( text, options = {} )",
      "description": "Creates an MCC-fashioned Bootstrap button with an option to add an icon.",
      "example": "hollywood/helpers/button"
    },
    {
      "helper": "Dropdown",
      "code": "dropdown( text, menu_items_array, options = {} )",
      "description": "Creates an MCC-fashioned Bootstrap dropdown with three options for menu items: Headers, List Items, and Dividers.<br/><br/>Menu items format:<br/><ul><li>All menu items should go in an array</li><li>Headers: { label: 'required', icon: 'optional', header: true }</li><li>List Items: { label: 'required', icon: 'optional', href: 'optional', class: 'optional' }</li><li>Dividers: '|'</li></ul>",
      "example": "hollywood/helpers/dropdown"
    },
    {
      "helper": "Search",
      "code": "search( search_by_options )",
      "description": "Creates an MCC-fashioned Bootstrap search dropdown button.<br/>The options may be added by providing an array of strings to the method.",
      "example": "hollywood/helpers/search"
    },
    {
      "helper": "Modal",
      "code": "modal( options = {} ) { |modal| block }",
      "description": "Creates an MCC-fashioned Bootstrap modal (does not include the button that toggles the modal).<br/>The method accepts options and a block. The general structure of a modal is shown in the gist below.",
      "example": "hollywood/helpers/modal"
    }
  ]
}
